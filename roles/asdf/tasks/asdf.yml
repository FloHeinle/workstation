---

- name: Set username
  set_fact:
    username: "{{ lookup('env', 'USER') }}"

- name: Set home
  set_fact:
    userhome: "{{ lookup('env', 'HOME') }}"

- name: "install asdf global dependencies with apt"
  apt:
    name: "{{ asdf_global_dependencies }}"
  become: yes

- name: "install asdf"
  git:
    repo: "https://github.com/asdf-vm/asdf.git"
    dest: "{{ userhome }}/.asdf"
    version: "{{ asdf_version }}"
  become: yes
  become_user: "{{ username }}"

- name: Add asdf to bashrc
  lineinfile:
    path: "{{ userhome }}/.zshrc"
    regexp: '.asdf/asdf.sh'
    line: ". $HOME/.asdf/asdf.sh"

- name: "set asdfrc"
  template:
    src: "asdfrc.j2"
    dest: "{{ userhome }}/.asdfrc"
    owner: "{{ username }}"
    mode: 0644
  become: yes
  become_user: "{{ username }}"

- name: "install ruby dependencies with apt"
  apt:
    name: "{{ asdf_ruby_dependencies }}"
  become: yes

- name: "install nodejs dependencies with apt"
  apt:
    name: "{{ asdf_nodejs_dependencies }}"
  become: yes

- name: "set vars"
  set_fact:
    asdf_nodejs_keyring: "{{ userhome }}/.asdf/keyrings/nodejs"

- name: "create keyring for Node.js keys"
  file:
    path: "{{ asdf_nodejs_keyring }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0700
  become: yes
  become_user: "{{ username }}"

- name: "import Node.js keys to keyring"
  command: "bash -lc '{{ userhome }}/.asdf/plugins/nodejs/bin/import-release-team-keyring'"
  args:
    creates: "{{ asdf_nodejs_keyring }}/pubring.gpg"
  environment:
    GNUPGHOME: "{{ asdf_nodejs_keyring }}"
  become: yes
  become_user: "{{ username }}"


- name: "install plugins"
  command: "bash -lc 'asdf plugin-add {{ item.name }} {{ item.repository | default() }}'"
  args:
    creates: "{{ userhome }}/.asdf/plugins/{{ item.name }}"
    chdir: "{{ userhome }}"
  with_items: "{{ asdf_plugins }}"
  when: asdf_plugins|length > 0
  become: yes
  become_user: "{{ username }}"
  ignore_errors: True

- name: "install apps"
  command: "bash -lc 'asdf install {{ item.0.name }} {{ item.1 }}'"
  args:
    creates: "{{ userhome }}/.asdf/installs/{{ item.0.name }}/{{ item.1 }}"
    chdir: "{{ userhome }}"
  with_subelements:
    - "{{ asdf_plugins }}"
    - versions
    - flags:
      skip_missing: True
  when: asdf_plugins|length > 0
  become: yes
  become_user: "{{ username }}"

- name: "set global app versions"
  command: "bash -lc 'asdf global {{ item.name }} {{ item.global | default(item.versions | difference(item.delete_versions|default([])) | sort | first) }}'"
  args:
    chdir: "{{ userhome }}"
  when: item.versions is defined
  with_items: "{{ asdf_plugins }}"
  become: yes
  become_user: "{{ username }}"